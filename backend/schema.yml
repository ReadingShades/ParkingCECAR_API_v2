openapi: 3.0.3
info:
  title: ParkingCECAR Detection API
  version: 1.0.0
  description: License plate detection API
paths:
  /api/v1/detections/:
    get:
      operationId: api_v1_detections_list
      description: List all detections, or create a new detection.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Detection'
          description: ''
    post:
      operationId: api_v1_detections_create
      description: |-
        Creates a detection record

        Args:
            request (_type_): _description_
            format (_type_, optional): _description_. Defaults to None.

        Returns:
            _type_: _description_
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Detection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Detection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Detection'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detection'
          description: ''
  /api/v1/detections{format}:
    get:
      operationId: api_v1_detections_formatted_list
      description: List all detections, or create a new detection.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Detection'
          description: ''
    post:
      operationId: api_v1_detections_formatted_create
      description: |-
        Creates a detection record

        Args:
            request (_type_): _description_
            format (_type_, optional): _description_. Defaults to None.

        Returns:
            _type_: _description_
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Detection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Detection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Detection'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detection'
          description: ''
  /api/v1/detections/filename/{file_name}/:
    get:
      operationId: api_v1_detections_filename_retrieve
      description: Retrieve a list of detection instances matching a given file name.
      parameters:
      - in: path
        name: file_name
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detection'
          description: ''
  /api/v1/detections/filename/{file_name}{format}:
    get:
      operationId: api_v1_detections_filename_formatted_retrieve
      description: Retrieve a list of detection instances matching a given file name.
      parameters:
      - in: path
        name: file_name
        schema:
          type: string
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detection'
          description: ''
  /api/v1/detections/id/{id}/:
    get:
      operationId: api_v1_detections_id_retrieve
      description: Retrieve, update or delete a detection instance.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detection'
          description: ''
    put:
      operationId: api_v1_detections_id_update
      description: Retrieve, update or delete a detection instance.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Detection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Detection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Detection'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detection'
          description: ''
    delete:
      operationId: api_v1_detections_id_destroy
      description: Retrieve, update or delete a detection instance.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/detections/id/{id}{format}:
    get:
      operationId: api_v1_detections_id_formatted_retrieve
      description: Retrieve, update or delete a detection instance.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detection'
          description: ''
    put:
      operationId: api_v1_detections_id_formatted_update
      description: Retrieve, update or delete a detection instance.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Detection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Detection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Detection'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detection'
          description: ''
    delete:
      operationId: api_v1_detections_id_formatted_destroy
      description: Retrieve, update or delete a detection instance.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/detections/ref/{id_ref}/:
    get:
      operationId: api_v1_detections_ref_retrieve
      description: |-
        Retrieves a single detection record that matches the id_ref given

        Args:
            request (Optional[HttpRequest]): Request info object carrying headers and request metadata.
            id_ref (Union[str, uuid.UUID]): UUID asociate identifier for a detection record.
            format (_type_, optional): System required config object that can help in specifying the format version .json|.html of the response. Defaults to None.

        Returns:
            _type_: _description_
      parameters:
      - in: path
        name: id_ref
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detection'
          description: ''
    post:
      operationId: api_v1_detections_ref_create
      description: |-
        Retrieves an specific detection record given an id_ref.
        Aditionally, this method also packages and sends a base64 string
        containing a image object across a REST response.

        Args:
            request (Optional[HttpRequest]): _description_
            id_ref (Union[str, uuid.UUID]): _description_
            format (_type_, optional): _description_. Defaults to None.

        Returns:
            _type_: _description_
      parameters:
      - in: path
        name: id_ref
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Detection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Detection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Detection'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detection'
          description: ''
    put:
      operationId: api_v1_detections_ref_update
      description: |-
        Updates a specific detection record given an id_ref

        Args:
            request (HttpRequest): _description_
            id_ref (Union[str, uuid.UUID]): _description_
            format (_type_, optional): _description_. Defaults to None.

        Returns:
            _type_: _description_
      parameters:
      - in: path
        name: id_ref
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Detection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Detection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Detection'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detection'
          description: ''
    delete:
      operationId: api_v1_detections_ref_destroy
      description: |-
        Deletes a specific detection record given an id_ref

        Args:
            request (Optional[HttpRequest]): _description_
            id_ref (Union[str, uuid.UUID]): _description_
            format (_type_, optional): _description_. Defaults to None.

        Returns:
            _type_: _description_
      parameters:
      - in: path
        name: id_ref
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/detections/ref/{id_ref}{format}:
    get:
      operationId: api_v1_detections_ref_formatted_retrieve
      description: |-
        Retrieves a single detection record that matches the id_ref given

        Args:
            request (Optional[HttpRequest]): Request info object carrying headers and request metadata.
            id_ref (Union[str, uuid.UUID]): UUID asociate identifier for a detection record.
            format (_type_, optional): System required config object that can help in specifying the format version .json|.html of the response. Defaults to None.

        Returns:
            _type_: _description_
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id_ref
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detection'
          description: ''
    post:
      operationId: api_v1_detections_ref_formatted_create
      description: |-
        Retrieves an specific detection record given an id_ref.
        Aditionally, this method also packages and sends a base64 string
        containing a image object across a REST response.

        Args:
            request (Optional[HttpRequest]): _description_
            id_ref (Union[str, uuid.UUID]): _description_
            format (_type_, optional): _description_. Defaults to None.

        Returns:
            _type_: _description_
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id_ref
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Detection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Detection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Detection'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detection'
          description: ''
    put:
      operationId: api_v1_detections_ref_formatted_update
      description: |-
        Updates a specific detection record given an id_ref

        Args:
            request (HttpRequest): _description_
            id_ref (Union[str, uuid.UUID]): _description_
            format (_type_, optional): _description_. Defaults to None.

        Returns:
            _type_: _description_
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id_ref
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Detection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Detection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Detection'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detection'
          description: ''
    delete:
      operationId: api_v1_detections_ref_formatted_destroy
      description: |-
        Deletes a specific detection record given an id_ref

        Args:
            request (Optional[HttpRequest]): _description_
            id_ref (Union[str, uuid.UUID]): _description_
            format (_type_, optional): _description_. Defaults to None.

        Returns:
            _type_: _description_
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id_ref
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Detection:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        id_ref:
          type: string
          format: uuid
        record_name:
          type: string
          maxLength: 300
        time_stamp:
          type: string
          format: date-time
          nullable: true
        file_name:
          type: string
          nullable: true
          maxLength: 300
        pred_loc:
          type: string
          nullable: true
          maxLength: 2000
        crop_loc:
          type: string
          nullable: true
          maxLength: 2000
        processing_time_pred:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,20})?$
          nullable: true
        processing_time_ocr:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,20})?$
          nullable: true
        ocr_text_result:
          type: string
          nullable: true
          maxLength: 500
      required:
      - id
      - record_name
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
